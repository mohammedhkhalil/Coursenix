@model EnrollViewModel
@{
    Layout = "_Layout";
}
@section css {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/css/courseDetailsG7.css">
}

<body>
    <div class="course-card-wrapper">
        <div class="course-card">
            <div class="row align-items-center mb-4">
                <div class="col-md-8">
                    <h2>@Model.CourseName</h2>
                    <div class="course-info">
                        <span><i class="fas fa-graduation-cap"></i> Grades @(Model.GradeLevels != null && Model.GradeLevels.Any() ? string.Join("-", Model.GradeLevels.Select(g => g.NumberOfGrade)) : "N/A")</span>
                        <span id="classes-per-week">
                            <i class="fas fa-calendar"></i> <span id="class-count">
                                @(Model.GradeLevels != null && Model.GradeLevels.Any() ? Model.GradeLevels.First().NumberOfClassesPerWeek.ToString() : "N/A")
                            </span> Classes/Week
                        </span>
                        <span><i class="fas fa-map-marker-alt"></i> @(string.IsNullOrEmpty(Model.Location) ? "Location TBD" : Model.Location)</span>
                    </div>
                </div>
                <div class="col-md-4 text-md-end">
                    <div class="course-price" id="selected-price">
                        @(Model.GradeLevels != null && Model.GradeLevels.Any()?$"${Model.GradeLevels.First().Price:F2}":"$0.00")
                    </div>
                </div>
            </div>

            <div class="teacher-info">
                <div class="teacher-image">
                    <img src="/assets/teacher1.svg" alt="@Model.TeacherName">
                </div>
                <div>
                    <h5 class="teacher-name">@Model.TeacherName</h5>
                    <p class="teacher-title">@(string.IsNullOrEmpty(Model.Description) ? "Experienced Teacher" : Model.Description)</p>
                </div>
            </div>
            <hr>
            <h4 class="mb-3">Choose your Grade</h4>
            <div class="grade-tabs mb-4">
                @if (Model.GradeLevels != null && Model.GradeLevels.Any())
                {
                    @foreach (var grade in Model.GradeLevels)
                    {
                        <div class="grade-tab @(Model.GradeLevels.First() == grade ? "active" : "")"
                             data-grade-id="@grade.GradeLevelId"
                             data-price="@grade.Price.ToString("F2")"
                             data-classes="@grade.NumberOfClassesPerWeek"
                             data-grade-number="@grade.NumberOfGrade">
                            Grade @grade.NumberOfGrade
                        </div>
                    }
                }
            </div>


            <p class="mb-4" id="grade-description">
                @if (Model.GradeLevels != null && Model.GradeLevels.Any())
                {
                    @($"Select one of the available groups for Grade {Model.GradeLevels.First().NumberOfGrade} below to enroll in this course.")
                }
                else
                {
                    @("No grades available for this course.")
                }
            </p>

            <div id="groups-container">
                @foreach (var grade in Model.GradeLevels)
                {
                    <div class="grade-groups" data-grade-id="@grade.GradeLevelId" style="@(Model.GradeLevels.First() == grade ? "display: block;" : "display: none;")">
                        @foreach (var group in grade.Groups)
                        {
                            var availableSeats = group.TotalSeats - group.EnrolledStudentsCount;
                            var seatsBadgeClass = "";
                            var seatsBadgeText = "";

                            if (availableSeats <= 0)
                            {
                                seatsBadgeClass = "seats-full";
                                seatsBadgeText = "Seats are Full";
                            }
                            else if (availableSeats <= 5)
                            {
                                seatsBadgeClass = "only_n_available";
                                seatsBadgeText = $"Only {availableSeats} seats";
                            }
                            else
                            {
                                seatsBadgeClass = "seats-available";
                                seatsBadgeText = $"{availableSeats} seats available";
                            }

                            <div class="group-card @(availableSeats <= 0 ? "disabled" : "")" data-group-id="@group.GroupId">
                                <h5 class="group-title">@group.Name</h5>
                                <ul class="group-details">
                                    <li>@string.Join(" & ", group.SelectedDays)</li>
                                    <li>@group.StartTime.ToString("h:mm tt") - @group.EndTime.ToString("h:mm tt")</li>
                                </ul>
                                <span class="seats-badge @seatsBadgeClass">@seatsBadgeText</span>
                                @if (availableSeats > 0)
                                {
                                    <div class="radio-button"></div>
                                }
                            </div>
                        }
                    </div>
                }
            </div>

            <form method="post" asp-controller="Student" asp-action="Enroll" id="enroll-form">
                <input type="hidden" name="groupId" id="selectedGroupId" />
                <div class="mt-4 text-end">
                    <button type="submit" class="enroll-btn">Enroll</button>
                </div>
            </form>
        </div>
    </div>

    
</body>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"></script> 
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize first grade tab as active and update price/classes info
            if ($('.grade-tab').length > 0) {
                const $firstGradeTab = $('.grade-tab').first();
                $firstGradeTab.addClass('active');

                const firstGradeId = $firstGradeTab.data('grade-id');
                const firstPrice = $firstGradeTab.data('price');
                const firstClasses = $firstGradeTab.data('classes');
                const firstGradeNumber = $firstGradeTab.data('grade-number'); // Get grade number

                $('.grade-groups[data-grade-id="' + firstGradeId + '"]').show();

                // Update price and classes count
                if (firstPrice) {
                    $('#selected-price').text('$' + parseFloat(firstPrice).toFixed(2));
                }
                if (firstClasses) {
                    $('#class-count').text(firstClasses);
                }
                // Update description text for the initial grade
                $('#grade-description').text('Select one of the available groups for Grade ' + firstGradeNumber + ' below to enroll in this course.');

            }

            // When a Grade Tab is clicked
            $('.grade-tab').on('click', function () {
                $('.grade-tab').removeClass('active');
                $(this).addClass('active');

                var gradeId = $(this).data('grade-id');
                var gradeNumber = $(this).data('grade-number'); // Get the grade number
                var price = $(this).data('price');
                var classesPerWeek = $(this).data('classes');

                $('.grade-groups').hide();
                $('.grade-groups[data-grade-id="' + gradeId + '"]').show();

                // Update price
                if (price) {
                    $('#selected-price').text('$' + parseFloat(price).toFixed(2));
                }

                // Update classes per week
                if (classesPerWeek) {
                    $('#class-count').text(classesPerWeek);
                }

                // Update description text
                $('#grade-description').text('Select one of the available groups for Grade ' + gradeNumber + ' below to enroll in this course.');

                // Reset selected group
                $('#selectedGroupId').val('');
                $('.group-card').removeClass('selected');
                $('.radio-button').removeClass('selected');
            });

            // Selecting a Group (radio-style)
            $(document).on('click', '.group-card', function () {
                // Skip if seats are full or disabled
                if ($(this).hasClass('disabled') || $(this).find('.seats-full').length > 0) {
                    return;
                }

                $('.group-card').removeClass('selected');
                $('.radio-button').removeClass('selected');

                $(this).addClass('selected');
                $(this).find('.radio-button').addClass('selected');

                var selectedGroupId = $(this).data('group-id');
                $('#selectedGroupId').val(selectedGroupId);
            });

            // Prevent form submission if no group is selected
            $('#enroll-form').submit(function (e) {
                if (!$('#selectedGroupId').val()) {
                    e.preventDefault();
                    alert('Please select a group first!');
                }
            });
        });
    </script>
}